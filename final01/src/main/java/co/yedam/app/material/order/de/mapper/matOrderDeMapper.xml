<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.yedam.app.material.order.de.mapper.MatOrderDeMapper">
<!-- 전체조회 -->
	<select id="selectMatOrderList" resultType="MatOrderDeVO">
		SELECT a.mat_od_cd
			 , mat_test_yn
			 , a.mat_code
			 , b.emp_code
			 , b.act_code
			 , a.mat_od_de_cd
			 , e.mat_name
			 , e.mat_unit
			 , e.mat_std
			 , a.mat_price
			 , a.mat_amt 
			 , c.act_name
			 , d.emp_name
			 , a.mat_od_acp
			 , b.mat_od_rq
		FROM mat_order_de a LEFT JOIN mat_order b
			ON (a.mat_od_cd = b.mat_od_cd)
            	LEFT JOIN com_act c
            		ON (b.act_code = c.act_code)
            			LEFT JOIN com_emp d 
            				ON (b.emp_code = d.emp_code)
            					LEFT JOIN com_mat e
            						ON (a.mat_code = e.mat_code)
        WHERE TRUNC(mat_od_rq) = TRUNC(sysdate)
		ORDER BY b.mat_od_rq DESC, a.mat_od_cd
	</select>
	
	<!-- 조회 페이지에서 헤더 그리드 -->
	<select id="selectMatListPageOrderList" resultType="MatOrderDeVO">
		SELECT a.mat_od_cd, a.emp_code, b.emp_name, a.act_code, c.act_name, a.mat_od_rq
		FROM mat_order a JOIN com_emp b
		ON(a.emp_code = b.emp_code)
		JOIN com_act c
		ON(a.act_code = c.act_code)
		WHERE TRUNC(mat_od_rq) = TRUNC(sysdate)
		ORDER BY mat_od_rq DESC
	</select>
	
	<!-- 조회페이지에서 검색 -->
	<select id="selectMatListPageOrderListSearch" resultType="MatOrderDeVO">
		SELECT a.mat_od_cd, a.emp_code, b.emp_name, a.act_code, c.act_name, a.mat_od_rq
		FROM mat_order a JOIN com_emp b
		ON(a.emp_code = b.emp_code)
		JOIN com_act c
		ON(a.act_code = c.act_code)
		<where>
			<if test="accountCode != null and !accountCode.equals('')">
				AND a.act_code LIKE '%' || #{accountCode} || '%'
			</if>
			<if test="startDate != null and !startDate.equals('')">
				AND TRUNC(a.mat_od_rq) <![CDATA[>=]]> #{startDate}
			</if>
			<if test="endDate != null and !endDate.equals('')">
				AND TRUNC(a.mat_od_rq) <![CDATA[<=]]> #{endDate}
			</if>
		</where>
		ORDER BY mat_od_rq DESC
	</select>
	
	<!--  조회 페이지에서 상세 그리드 -->
	<select id="selectMatListPageOrderDeList" resultType="MatOrderDeVO">
		SELECT a.mat_od_de_cd, a.mat_amt, a.mat_code, b.mat_name, b.mat_unit, b.mat_std, a.mat_test_yn, a.mat_price, a.mat_od_acp
		FROM mat_order_de a JOIN com_mat b
		ON(a.mat_code = b.mat_code)
		WHERE mat_od_cd = #{matOdCd}
		ORDER BY mat_od_acp DESC
	</select>
	
	<!-- 전체조회에서 검색 -->
	<select id="selectMatOrderSearch" resultType="MatOrderDeVO">
		SELECT a.mat_od_cd
			 , mat_test_yn
			 , a.mat_code
			 , b.emp_code
			 , b.act_code
			 , a.mat_od_de_cd
			 , e.mat_name
			 , e.mat_unit
			 , e.mat_std
			 , a.mat_price
			 , a.mat_amt 
			 , c.act_name
			 , d.emp_name
			 , a.mat_od_acp
			 , b.mat_od_rq
		FROM mat_order_de a LEFT JOIN mat_order b
			ON (a.mat_od_cd = b.mat_od_cd)
            	LEFT JOIN com_act c
            		ON (b.act_code = c.act_code)
            			LEFT JOIN com_emp d 
            				ON (b.emp_code = d.emp_code)
            					LEFT JOIN com_mat e
            						ON (a.mat_code = e.mat_code)
            <where>
            	<if test="materialCode != null and !materialCode.equals('')">
					AND a.mat_code LIKE '%' || #{materialCode} || '%'
				</if>
				<if test="accountCode != null and !accountCode.equals('')">
					AND b.act_code LIKE '%' || #{accountCode} || '%'
				</if>
				<if test="startDate != null and !startDate.equals('')">
					AND TO_CHAR(b.mat_od_rq, 'YYYY-MM-DD') <![CDATA[>=]]> #{startDate}
				</if>
				<if test="endDate != null and !endDate.equals('')">
					AND TO_CHAR(b.mat_od_rq, 'YYYY-MM-DD') <![CDATA[<=]]> #{endDate}
				</if>
				<if test="before==2">
					AND a.mat_test_yn != 'N'
				</if>
				<if test="comple==2">
					AND a.mat_test_yn != 'Y'
				</if>
			</where>
			ORDER BY b.mat_od_rq DESC, a.mat_od_cd
	</select>
	
	<!-- 등록 -->
	<insert id="insertMatOrderList" parameterType="MatOrderDeVO">
		<selectKey keyProperty="matOdCd" resultType="String" order="BEFORE">
			SELECT 'MOC-' || TO_CHAR(sysdate, 'rrMMdd') || LPAD(NVL(MAX(SUBSTR(mat_od_cd, -3)),0) + 1, 3, '0')
			FROM mat_order
			WHERE SUBSTR(mat_od_cd, 5, 6) = TO_CHAR(sysdate, 'rrMMdd')
		</selectKey>
			INSERT INTO
				mat_order
			VALUES(
				#{matOdCd}
				,#{empCode}
				,#{actCode}
				,#{matOdRq}
			)
	</insert>
	<insert id="insertMatOrderDeList" parameterType="MatOrderDeVO">	
		<selectKey keyProperty="matOdCd" resultType="String" order="BEFORE">
			SELECT 'MOC-' || TO_CHAR(sysdate, 'rrMMdd') || LPAD(NVL(MAX(SUBSTR(mat_od_cd, -3)),0), 3, '0')
			FROM mat_order
			WHERE SUBSTR(mat_od_cd, 5, 6) = TO_CHAR(sysdate, 'rrMMdd')
		</selectKey>
			INSERT INTO 
				mat_order_de(MAT_OD_DE_CD,
								MAT_OD_CD,
								MAT_AMT,
								MAT_CODE,
								MAT_TEST_YN,
								MAT_PRICE,
								MAT_OD_ACP)
            VALUES
                (get_primaryCode('matOdDeCd'), 
                 #{matOdCd}, 
                 #{matAmt}, 
                 #{matCode}, 
                 'N', 
                 #{matPrice}, 
                 #{matOdAcp})

	</insert>
	
	<update id="updateMatOrderList" parameterType="MatOrderDeVO">
			UPDATE mat_order_de
			SET mat_code = #{matCode}, mat_amt = #{matAmt}, mat_od_acp = #{matOdAcp}, mat_price = #{matPrice}
			WHERE mat_od_de_cd = #{matOdDeCd}
	</update>
	
	<delete id="deleteMatOrderList" parameterType="MatOrderDeVO">
			DELETE FROM mat_order
			WHERE mat_od_cd IN (
								SELECT a.mat_od_cd
								FROM mat_order a LEFT JOIN mat_order_de b
									ON(a.mat_od_cd = b.mat_od_cd)
								WHERE mat_od_de_cd IS NULL)
	</delete>
	
	<delete id="deleteMatOrderDeList" parameterType="MatOrderDeVO">
			DELETE FROM mat_order_de
			WHERE mat_od_de_cd = #{matOdDeCd}
	</delete>
	
	
	<!-- 거래처 목록 -->
	<select id="selectActMatModal" resultType="OrderVO">
		SELECT act_code, act_name, find_cdnm('0J',act_sts) act_sts, find_cdnm('ACT-TYPE',act_kind) act_kind
		FROM com_act
		WHERE act_kind = 'ACT-TYPE2'
		AND ACT_STS = 'D1'
		ORDER BY act_code
	</select>
	
	<!-- 모달검색 - 거래처 -->
	<select id="selectActMatModalSearch" resultType="OrderVO">
		SELECT act_code, act_name, find_cdnm('0J',act_sts) act_sts, find_cdnm('ACT-TYPE',act_kind) act_kind
		FROM com_act
		<if test="actName != null and !actName.equals('')">
		WHERE act_name LIKE '%' || #{actName} || '%'
		</if>
		AND act_kind = 'ACT-TYPE2'
		ORDER BY act_code
	</select>
	
	<!-- 관리페이지 신규 생산계획 자재 소모량 -->
	<select id="selectNewPrcsPlan" resultType="MatStockVO">
	with f as (SELECT SUM(CASE WHEN c.mp_kind='P' THEN e.bom_amt * a.prcs_plan_amt
                     				 WHEN c.mp_kind='M' THEN c.bom_amt * a.prcs_plan_amt
                    				 END) AS bom_amt
                    	    , CASE WHEN c.mp_kind='P' THEN e.mp_code
                    			   WHEN c.mp_kind='M' THEN c.mp_code
                    			   END AS mat_code
        			 FROM prcs_plan_de a
	        			 JOIN bom_header b
	        			 ON(a.prod_code = b.prod_code)
	        			 RIGHT JOIN bom_detail c
	        			 ON(b.bom_no = c.bom_no)
	        			 LEFT JOIN(SELECT * FROM bom_header WHERE bom_yn = 'O') d
	        			 ON(c.mp_code = d.prod_code)
	        			 LEFT JOIN bom_detail e
	        			 ON(d.bom_no = e.bom_no)
	        			 LEFT JOIN prcs_plan m
	        			 ON(a.prcs_plan_code = m.prcs_plan_code)
        			 WHERE prcs_dir_sts= 'T1'
        			 	AND b.bom_yn = 'O'
        			 	AND prcs_start_date - 7 <![CDATA[<=]]> TRUNC(sysdate)
        			 GROUP BY CASE WHEN c.mp_kind='P' THEN e.mp_code
                     			   WHEN c.mp_kind='M' THEN c.mp_code
                     			   END),
l as (
                    SELECT i.mat_code, sum(NVL(mat_yamt, i.mat_amt)) as will_od_amt
                    FROM mat_order_de i
                    LEFT JOIN mat_test j
                    ON(i.mat_od_de_cd = j.mat_od_de_cd)
                    LEFT JOIN mat_in k
                    ON(j.mat_test_code = k.mat_test_code)
                    WHERE mat_lot IS NULL
                    GROUP BY i.mat_code
        )                     			   
                     			   
                     			   
		SELECT NVL(f.bom_amt, 0) will_use_amt
                         , g.mat_name
                         , g.mat_code
                         , g.mat_unit
                         , g.mat_std
                         , g.mat_safe
                         , NVL(h.mat_stock, 0) total_stock
                         , NVL(l.will_od_amt, 0 ) will_od_amt  
        FROM  f
		RIGHT JOIN com_mat g
        ON(f.mat_code = g.mat_code)
        LEFT JOIN (SELECT SUM(mat_stock) AS mat_stock, mat_code from mat_in group by mat_code) h
             ON(h.mat_code = g.mat_code)

        LEFT JOIN  l
             ON(l.mat_code = g.mat_code)
        <if test="materialName != null and !materialName.equals('')">
			WHERE g.mat_name LIKE '%' || #{materialName} || '%'
		</if>
        ORDER BY g.mat_code
	</select>
	
	
	<!-- 해당 자재 거래처 찾기 -->
	<select id="selectMatBuyAct" resultType="MatOrderDeVO">
		WITH DE AS (select act_code, max(a.mat_od_cd) mat_od_cd , count(mat_price) as cnt
		FROM mat_order_de a JOIN mat_order b
		ON(a.mat_od_cd = b.mat_od_cd)
		WHERE  mat_code = #{matCode}
		group by act_code)
		SELECT c.act_code, c.act_name, NVL(de.cnt,0) as act_count,
		NVL((SELECT mat_price FROM mat_order_de sde WHERE sde.mat_od_cd = de.mat_od_cd and mat_code = #{matCode} ), 0) as mat_price
		FROM COM_ACT C LEFT OUTER JOIN DE ON(C.ACT_CODE = DE.ACT_CODE)
		WHERE ACT_KIND = 'ACT-TYPE2'
		ORDER BY NVL(de.cnt,0) DESC
	</select>
	
	<!-- 해당 자재 해당 거래처 가격찾기 -->
	<select id="selectActMatPrice" resultType="MatOrderDeVO">
		WITH DE AS (select act_code, max(a.mat_od_cd) mat_od_cd , count(mat_price) as cnt
		FROM mat_order_de a JOIN mat_order b
		ON(a.mat_od_cd = b.mat_od_cd)
		WHERE  mat_code = #{matCode}
		group by act_code)
		SELECT c.act_code, c.act_name, NVL(de.cnt,0) as act_count,
		NVL((SELECT mat_price FROM mat_order_de sde WHERE sde.mat_od_cd = de.mat_od_cd and mat_code = #{matCode} ), 0) as mat_price
		FROM COM_ACT C LEFT OUTER JOIN DE ON(C.ACT_CODE = DE.ACT_CODE)
		WHERE ACT_KIND = 'ACT-TYPE2'
		AND c.ACT_CODE = #{actCode}
		ORDER BY NVL(de.cnt,0) DESC
	</select>
	
	<!-- 해당 거래처 자재 찾기 -->
	<select id="selectActSellMat" resultType="MatOrderDeVO">
		SELECT mat_code
		FROM mat_order_de a LEFT JOIN mat_order b
		ON(a.mat_od_cd = b.mat_od_cd)
		WHERE act_code = #{actCode}
		GROUP BY mat_code
	</select>
	
	<!-- max 거래처면 초록색 표시 -->
	<select id="selectMaxActListSearch" resultType="MatOrderDeVO">
		SELECT e.mat_code
		FROM(SELECT mat_code
				  , max(mat_count) as max_mat_count
		     FROM (SELECT mat_code
		     			, act_code
		     			, count(mat_price) as mat_count
		   		   FROM mat_order_de a
		   		   JOIN mat_order b
		    	   ON(a.mat_od_cd = b.mat_od_cd)
		    	   GROUP BY mat_code, act_code)
		    GROUP BY mat_code) e
		JOIN (SELECT mat_code
		    	   , act_code
		    	   , COUNT(*) as act_count
		      FROM mat_order_de c
		      JOIN mat_order d
		      ON(c.mat_od_cd = d.mat_od_cd)
		      WHERE act_code = #{actCode}
		      GROUP BY mat_code, act_code) f
		ON(e.mat_code = f.mat_code)
		WHERE max_mat_count = act_count
	</select>
	
	<!-- 1번 거래처면 노란색 표시 -->
	<select id="selectLeastActListSearch" resultType="MatOrderDeVO">
		SELECT mat_code, find_mat_name(mat_code) as mat_name
		FROM mat_order_de a JOIN mat_order b
		ON(a.mat_od_cd = b.mat_od_cd)
		WHERE act_code = #{actCode}
	</select>
		
</mapper>