<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.yedam.app.material.in.mapper.MatInMapper">
	<!-- 전체조회 -->
	<select id="selectMatInList" resultType="MatInVO">
		SELECT a.mat_lot
			 , mat_use_yn(mat_lot) use_yn
			 , a.mat_code
			 , b.mat_name
			 , b.mat_unit
			 , b.mat_std
			 , c.act_name
			 , a.act_code
			 , a.mat_in_amt
			 , a.mat_test_code
			 , a.emp_code
			 , d.emp_name
			 , a.mat_ind
			 , a.mat_exd 
		FROM mat_in a LEFT JOIN com_mat b
			ON(a.mat_code = b.mat_code)
				LEFT JOIN com_act c
					ON(a.act_code = c.act_code)
						LEFT JOIN com_emp d
							ON(a.emp_code = d.emp_code)
		ORDER BY a.mat_ind DESC
	</select>
	<!-- 검색 -->
	<select id="selectMatInSearch" resultType="MatInVO">
		SELECT a.mat_lot
			 , mat_use_yn(mat_lot) use_yn
			 , a.mat_code
			 , b.mat_name
			 , b.mat_unit
			 , b.mat_std
			 , c.act_name
			 , a.act_code
			 , a.mat_in_amt
			 , a.mat_test_code
			 , a.emp_code
			 , d.emp_name
			 , a.mat_ind
			 , a.mat_exd
		FROM mat_in a LEFT JOIN com_mat b
			ON(a.mat_code = b.mat_code)
				LEFT JOIN com_act c
					ON(a.act_code = c.act_code)
						LEFT JOIN com_emp d
							ON(a.emp_code = d.emp_code)
		<where>
			<if test="materialCode != null and !materialCode.equals('')">
				AND a.mat_code LIKE '%' || #{materialCode} || '%'
			</if>
			<if test="accountCode != null and !accountCode.equals('')">
				AND a.act_code LIKE '%' || #{accountCode} || '%'
			</if>
			<if test="startDate != null and !startDate.equals('')">
				AND TRUNC(a.mat_ind) <![CDATA[>=]]> #{startDate}
			</if>
			<if test="endDate != null and !endDate.equals('')">
				AND TRUNC(a.mat_ind) <![CDATA[<=]]> #{endDate}
			</if>
			<choose>
	            <when test="checkList != null and checkList.size != 0">
	                and mat_use_yn(mat_lot) in 
	                <foreach collection="checkList" item="item" index="index" separator="," open="(" close=")">
	                    #{item}
	                </foreach>
	            </when>
        	</choose>	
		</where>
		ORDER BY a.mat_ind DESC
	</select>
	
	<!-- 검수는 됐지만 입고 안된 자재들 목록-->
	<select id="selectMatTestFinishList" resultType="MatTestVO">
		SELECT a.mat_test_code
		     , d.mat_name
		     , d.mat_unit
		     , d.mat_std
		     , c.mat_code
		     , f.act_code
		     , e.act_name
		     , a.mat_od_de_cd
		     , a.mat_amt
		     , mat_yamt
		     , mat_namt
		     , a.err_code
		     , g.commde_info err_info
		     , mat_test_date
		FROM mat_test a LEFT JOIN mat_in b
			ON(a.mat_test_code = b.mat_test_code)
				LEFT JOIN com_commde g
					ON(a.err_code = g.commde_code)
						LEFT JOIN mat_order_de c
							ON(a.mat_od_de_cd = c.mat_od_de_cd)
	        					LEFT JOIN com_mat d
	        						ON(c.mat_code = d.mat_code)
	        							LEFT JOIN mat_order f
	        								ON(c.mat_od_cd = f.mat_od_cd)
	        									LEFT JOIN com_act e
	        										ON(f.act_code = e.act_code)
		WHERE b.mat_test_code IS NULL
		AND a.mat_yamt > 0
		ORDER BY mat_test_date DESC
	</select>
	
	<!-- 하단 그리드 행삭제시 상단 그리드 데이터 올리기용 -->
	<select id="selectDeletedMatTest" resultType="MatTestVO">
		SELECT a.mat_test_code
			 , d.mat_name
			 , d.mat_unit
			 , d.mat_std
			 , c.mat_code
			 , f.act_code
			 , e.act_name
			 , a.mat_od_de_cd
			 , a.mat_amt
			 , mat_yamt
			 , mat_namt
			 , a.err_code
			 , b.commde_info err_info
			 , mat_test_date
		FROM mat_test a 
		LEFT JOIN com_commde b
			ON(a.err_code = b.commde_code)
				LEFT JOIN mat_order_de c
					ON(a.mat_od_de_cd = c.mat_od_de_cd)
	        			LEFT JOIN com_mat d
	        				ON(c.mat_code = d.mat_code)
	        					LEFT JOIN mat_order f
	        						ON(c.mat_od_cd = f.mat_od_cd)
	        							LEFT JOIN com_act e
	        								ON(f.act_code = e.act_code)
		WHERE a.mat_test_code = #{matTestCode}
	</select>
	
	<!-- 등록 -->
	<insert id="insertMatIn" parameterType="MatInVO">
		INSERT INTO mat_in (
				MAT_LOT
				, MAT_CODE
				, MAT_IN_AMT
				, MAT_EXD
				, MAT_IND
				, EMP_CODE
				, MAT_TEST_CODE
				, ACT_CODE
				, MAT_STOCK
			) VALUES (
				get_primaryCode('matLot')
				, #{matCode}
				, #{matInAmt}
				, #{matExd}
				, #{matInd}
				, #{empCode}
				, #{matTestCode}
				, #{actCode}
				, #{matInAmt}
			)
	</insert>
	
	<!-- 수정 -->
	<update id="updateMatIn" parameterType="MatInVO">
		UPDATE mat_in
		SET mat_ind = #{matInd}, mat_exd = #{matExd}
		WHERE mat_lot = #{matLot}
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteMatIn" parameterType="MatInVO">
		DELETE FROM mat_in
		WHERE mat_lot = #{matLot}
	</delete>
	
	<!-- 자재정산 -->
	<select id="selectLotModal" resultType="MatInVO">
		SELECT a.mat_code
			 , b.mat_name
			 , b.mat_unit
			 , b.mat_std
			 , a.mat_lot
			 , a.mat_stock
		FROM mat_in a LEFT JOIN com_mat b
			ON(a.mat_code = b.mat_code)	
		
		<where>
			<if test="materialCode != null and !materialCode.equals('')">
				AND a.mat_code = #{materialCode}
			</if>
			<if test="lotName != null and !lotName.equals('')">
				AND a.mat_lot LIKE '%' || #{lotName} || '%'
			</if>
		</where>
		
		ORDER BY a.mat_code
	</select>
</mapper>