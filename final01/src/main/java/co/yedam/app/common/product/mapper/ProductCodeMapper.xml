<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="co.yedam.app.common.product.mapper.ProductCodeMapper">
	  <select id="selectProdCodeList" resultType="ProductCodeVO">
		  	SELECT  prod_code,
					prod_kind,
					find_cdnm('0E', prod_kind) AS kindName,
					prod_name,
					prod_unit,
					prod_std
			FROM com_prod
		ORDER BY prod_code
	  </select>
	  
	  <select id="searchSelectProdCode" resultType="ProductCodeVO">
	  	  	SELECT  prod_code,
					prod_kind,
					prod_name,
					prod_unit,
					prod_std
			FROM com_prod
			WHERE prod_name LIKE '%' || #{prodName} || '%'
		ORDER BY prod_code
	  </select>
	  
	  <select id="selectSemiProdList" resultType="ProductCodeVO">
	  		SELECT  prod_code,
					prod_kind,
					find_cdnm('0E', prod_kind) AS kindName,
					prod_name,
					prod_unit,
					prod_std
			FROM com_prod
			where prod_kind='S'
		ORDER BY prod_code
	  </select>
	  
	  
	  <!-- 제품 등록 -->
	  <insert id="insertProdInfo" parameterType="ProductCodeVO">
	  	<selectKey keyProperty="prodCode" resultType="String" order="BEFORE">
	  		SELECT 'PROD-' || LPAD((NVL(MAX(SUBSTR(prod_code, -4)),0)+1),4,'0')
	  		FROM com_prod
	  	</selectKey>
		  	INSERT INTO com_prod
		  						(
		  						 prod_code
								,prod_kind
								,prod_name
								,prod_unit
								<if test="prodStd != null and prodStd != ''">
								,prod_std
								</if>
		  						)
		  		VALUES
		  				(
		  				#{prodCode}
		  				,#{prodKind}
		  				,#{prodName}
		  				,#{prodUnit}
		  				<if test="prodStd != null and prodStd != ''">
		  				,#{prodStd}
		  				</if>
		  				)
	  </insert>
	  
	  <update id="updateProdInfo"  parameterType="ProductCodeVO">
	  	UPDATE com_prod SET
	  	 					 prod_kind = #{prodKind}
							,prod_name = #{prodName}
							,prod_unit = #{prodUnit}
							<if test="prodStd != null and prodStd != ''">
							,prod_std = #{prodStd}
							</if>
		WHERE prod_code = #{prodCode}
	  </update>
	  
<!-- 	  <delete id="deleteProdInfo"  parameterType="ProductCodeVO">
	  		DELETE FROM com_prod
	  		WHERE prod_code = #{prodCode}
	  </delete> -->
	  
	  
	  <delete id="deleteProdInfo" statementType="CALLABLE" parameterType="ProductCodeVO">

		    {call prod_Delete(
		
		        #{prodCode}
		        , #{result, mode=OUT, jdbcType=VARCHAR}
		
		    )}

		</delete>
	  
	  
	  <!-- BOM 등록안된제품가져오기 -->
	  <select id="bomNoProdList" resultType="ProductCodeVO">
		 		SELECT  prod_code,
						prod_kind,
						find_cdnm('0E', prod_kind) AS kindName,
						prod_name,
						prod_unit,
						prod_std
				FROM com_prod
	            WHERE prod_code not 
	            					IN(SELECT prod_code
	                                    FROM bom_header
	                                   )
				ORDER BY prod_code
		</select>
		
		
		
		<!-- 제품명 중복 확인 -->
		<select id="prodNameUseCheck" resultType="ProductCodeVO">
			SELECT  prod_code,
					prod_kind,
					prod_name,
					prod_unit,
					prod_std
			FROM com_prod
			WHERE prod_name = #{prodNameUse}
		</select>
  </mapper>